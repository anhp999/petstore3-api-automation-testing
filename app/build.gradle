/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.1.0/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    runtimeOnly("com.github.scribejava:scribejava-apis:8.3.3")

    implementation("org.testng:testng:7.11.0")
    implementation("com.jayway.jsonpath:json-path:2.9.0")
    implementation("org.json:json:20250517")
    implementation("com.github.javafaker:javafaker:1.0.2")
    implementation("com.aventstack:extentreports:5.1.2")
    implementation("org.apache.poi:poi:5.4.1")
    implementation("org.apache.poi:poi-ooxml:5.4.1")
    implementation("com.github.java-json-tools:json-schema-validator:2.2.14")
    implementation("org.apache.logging.log4j:log4j-core:2.25.1")
    implementation("org.apache.logging.log4j:log4j-api:2.25.1")
    testImplementation("io.rest-assured:rest-assured:5.5.6")//
    testRuntimeOnly("org.fusesource.jansi:jansi:2.4.0")
}

test {
    useTestNG() {
        useDefaultListeners = true
        outputDirectory = file("$projectDir/test-output")
        suites 'src/test/resources/testng.xml'
    }

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}